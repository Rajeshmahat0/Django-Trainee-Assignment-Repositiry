Question 1: By default are django signals executed synchronously or asynchronously? Please support your answer with a code snippet that conclusively proves your stance. The code does not need to be elegant and production ready, we just need to understand your logic.
Ans - By default, Django signals execute synchronously. This means when a signal is sent, Django waits for all connected receivers to finish executing before moving forward.
code :- 
import time
from django.db.models.signals import post_save
from django.dispatch import receiver
from django.contrib.auth.models import User

@receiver(post_save, sender=User)
def slow_signal_handler(sender, instance, **kwargs):
    print("Signal received. Processing...")
    time.sleep(5)  # Simulate a slow operation
    print("Signal processing finished.")

def test_signal():
    start_time = time.time()
    
    user = User.objects.create(username="testuser")
    
    end_time = time.time()
    print(f"Total Execution Time: {end_time - start_time:.2f} seconds")

