Question :- By default do django signals run in the same database transaction as the caller? Please support your answer with a code snippet that conclusively proves your stance. The code does not need to be elegant
and production ready, we just need to understand your logic.
Ans :- 
By default, Django signals execute within the same transaction as the caller if the signal is triggered by a modelâ€™s post_save or post_delete event. This means that if the transaction in the caller fails,
the changes made inside the signal will also be rolled back
Code :-
from django.db import transaction
from django.db.models.signals import post_save
from django.dispatch import receiver
from django.contrib.auth.models import User

@receiver(post_save, sender=User)
def create_profile(sender, instance, **kwargs):
    User.objects.create(username="profile_user")  # Signal creates another user

def test_transaction():
    try:
        with transaction.atomic():
            User.objects.create(username="testuser")  # Triggers signal
            raise Exception("Rollback!")  # Force rollback
    except:
        pass

    print("User exists:", User.objects.filter(username="profile_user").exists())
